#define _DISABLE_TLS_
#include <BridgeSSLClient.h>
#include <ThingerYun.h>
#include <Bridge.h>
#include <HttpClient.h>
ThingerYun thing("Invernaderos2019", "E_MVRP", "arduinowind");

short numRevsAnemometer = 0;
short numDropsRainGauge = 0;
String wSpeed = "", wDir = "", rain = "", rad = "";
unsigned long currentTime = 0;
byte wsl = 10, rfl = 10, wdl = 10, radl = 10;
long t1 = 0, t2 = 0, t3 = 0, t4 = 0;
const int ledPIN = 9;
void setup() {
   pinMode(ledPIN , OUTPUT);
  Bridge.begin();
  serverCheck();
  pinMode(1, INPUT);
  digitalWrite(1, HIGH);
  digitalWrite(3, HIGH);
  attachInterrupt(0, countAnemometer, FALLING);
  attachInterrupt(1, countRainGauge, FALLING);

  thing["direction"] >> outputValue(wDir);
  thing["speed"] >> outputValue(wSpeed);
  thing["rain"] >> outputValue(rain);
  thing["radiation"] >> outputValue(rad);

  thing["weather_station"] >> [](pson & out) {
    out["direction"] = wDir;
    out["speed"] = wSpeed;
    out["rain"] = rain;
    out["radiation"] = rad;
  };

}
void loop() {
  digitalWrite(ledPIN , HIGH);
  thing.handle();
  if ((millis() - currentTime) > 1000) {
    currentTime = millis();
    if (((millis() - t1) / 1000) >= wsl) {
      wSpeed = getURL("windSpeed.php?val=" + String(numRevsAnemometer) + "&delay=" + String(millis() - t1));
      t1 = millis();
      numRevsAnemometer = 0;
    }
    if (((millis() - t2) / 1000) >= wdl) {
      wDir = getURL("windDirection.php?val=" + String(analogRead(A5)));
      t2 = millis();

    }
    if (((millis() - t3) / 1000) >= rfl) {
      rain = getURL("rainGauge.php?val=" + String(numDropsRainGauge) + "&delay=" + String(millis() - t3));
      t3 = millis();
      numDropsRainGauge = 0;
    }
    if (((millis() - t4) / 1000) >= radl) {
      rad = getURL("radiation.php?a0=" + String(averageAnalogRead(A0)) + "&a1=" + String(averageAnalogRead(A1)));
      t4 = millis();
    }
  }
  
}

void countAnemometer() {
  numRevsAnemometer++;
}
void countRainGauge() {
  numDropsRainGauge++;
}

int averageAnalogRead(int pinToRead)
{
  byte numberOfReadings = 8;
  unsigned int runningValue = 0;

  for (int x = 0 ; x < numberOfReadings ; x++)
    runningValue += analogRead(pinToRead);
  runningValue /= numberOfReadings;

  return (runningValue);
 
      
}

String getURL(String url) {
  HttpClient client;
  String server = "http://0.0.0.0/agro/";
  server += url;
  client.get(server);
  String str = "";
  int i = 0;
  while (client.available() == 0) {
    if (i >= 10) {
      i = 0;
      break;
    }
    else
    {
      i++;
      delay(1);
    }
  }
  if (client.available() > 0) {
    while (client.available()) {
      int c = client.read();
      if (c != 13) {
        if (c != 10) {
          str += (char)c;
        }
      }
    }
  }
  return str;
}

void serverCheck() {
  while (getURL("serverCheck.txt") != "OK") {
    delay(100);
  }
}


